From 5eab7e52ae72047453b934937e457646f4c6bfd3 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 16 Nov 2018 23:08:50 -0500
Subject: [PATCH] Book Size Limits

Puts some limits on the size of books.

diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index bc74ea2f09..beec4e33c6 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -458,4 +458,11 @@ public class PaperConfig {
             velocitySecretKey = secret.getBytes(StandardCharsets.UTF_8);
         }
     }
+
+    public static int maxBookPageSize = 2560;
+    public static double maxBookTotalSizeMultiplier = 0.98D;
+    private static void maxBookSize() {
+        maxBookPageSize = getInt("settings.book-size.page-max", maxBookPageSize);
+        maxBookTotalSizeMultiplier = getDouble("settings.book-size.total-multiplier", maxBookTotalSizeMultiplier);
+    }
 }
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 3427e95e60..462ab49762 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -750,6 +750,38 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
     }
 
     public void a(PacketPlayInBEdit packetplayinbedit) {
+        // Paper start
+        ItemStack testStack = packetplayinbedit.b();
+        if (!server.isPrimaryThread() && !testStack.isEmpty() && testStack.getTag() != null) {
+            NBTTagList pageList = testStack.getTag().getList("pages", 8);
+            long byteTotal = 0;
+            int maxBookPageSize = com.destroystokyo.paper.PaperConfig.maxBookPageSize;
+            double multiplier = Math.max(0.3D, Math.min(1D, com.destroystokyo.paper.PaperConfig.maxBookTotalSizeMultiplier));
+            long byteAllowed = maxBookPageSize;
+            for (int i = 0; i < pageList.size(); ++i) {
+                String testString = pageList.getString(i);
+                int byteLength = testString.getBytes(java.nio.charset.StandardCharsets.UTF_8).length;
+                byteTotal += byteLength;
+                if (byteTotal > byteAllowed) {
+                    PlayerConnection.LOGGER.warn(this.player.getName() + " tried to send too large of a book. Book Size: " + byteTotal + " - Allowed:  "+ byteAllowed + " - Pages: " + pageList.size());
+                    minecraftServer.postToMainThread(() -> this.disconnect("Book too large!"));
+                    return;
+                }
+                int length = testString.length();
+                int multibytes = byteLength == length ? byteLength : (int) Math.round((double) byteLength / (double) length);
+                for (int x = 1; x < multibytes; x++) {
+                    multiplier *= multiplier;
+                }
+                byteAllowed += (maxBookPageSize * Math.min(1, Math.max(0.1D, (double) length / 255D))) * multiplier;
+                multiplier *= multiplier;
+
+                if (multibytes > 1) {
+                    // penalize MB some more
+                    byteAllowed -= length;
+                }
+            }
+        }
+        // Paper end
         // CraftBukkit start
         PlayerConnectionUtils.ensureMainThread(packetplayinbedit, this, this.player.getWorldServer());
         if (this.lastBookTick + 20 > MinecraftServer.currentTick) {
-- 
2.19.1

